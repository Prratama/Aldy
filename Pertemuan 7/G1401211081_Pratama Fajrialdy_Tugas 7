---
title: "Tugas MPDW Pertemuan 7"
author : "Pratama Fajrialdy - G1401211081"
output: html_notebook
---

```{r}
library(forecast)
library(graphics)
library(TTR)
library(TSA)
library(dplyr)
library(forecast)
library(lmtest) 
library(orcutt) 
library(HoRM) 
library(corrplot)
library(dLagM)
library(dynlm)
library(MLmetrics)
library(ggplot2)
library(tsibble)
library(tseries)
library(MASS)
library(aTSA)
```

# Import Data
```{r}
library(rio)
data <- import("https://raw.githubusercontent.com/Prratama/MPDW/main/Data/mpdw1.csv")
```

# Data Time Series
```{r}
ts5 <- ts(dt5$Harga)
ts5
summary(ts5)
```

# Membagi data menjadi data latih (80%) dan data uji (20%), kemudian jadikan time series
```{r}
latih <- dt[1:98,2]
tes <- dt[99:122,2]
traints <- ts(latih, frequency = 12)
testts <- ts(tes, frequency = 12)
```

# Visualisasi 
```{r}
library(ggplot2)
library(tsibble)
plot_stas <- ts5 |> as_tsibble() |> 
  ggplot(aes(x = index, y = value)) + geom_line() + theme_bw() +
  xlab("Harga") + ylab("Periode")
plot_stas
mean(ts5)
plot_trstas <- traints |> as_tsibble() |> 
  ggplot(aes(x = index, y = value)) + geom_line() + theme_bw() +
  xlab("Harga") + ylab("Periode")
plot_trstas
mean(ts5)
plot_testas <- testts |> as_tsibble() |> 
  ggplot(aes(x = index, y = value)) + geom_line() + theme_bw() +
  xlab("Harga") + ylab("Periode")
plot_testas
mean(ts5)
```

# Check Stasioner
## Plot acf
```{r}
acf(traints, main="ACF", lag.max=20)
```
Berdasarkan plot ACF, terlihat bahwa plot ACF pada data tersebut cenderung *tails off* dan membentuk gelombang sinus. menandakan bahwa data tersebut stasioner dalam rataan

## Uji ADF
```{r}
tseries::adf.test(traints)
```
$H_0$ : Data tidak stasioner dalam rataan
$H_1$ : Data stasioner dalam rataan

Berdasarkan uji ADF tersebut, didapat *p-value* sebesar 0.086 yang lebih besar dari taraf nyata 5% sehingga tak tolak $H_0$ dan menandakan bahwa data tidak stasioner dalam rataan. Hal ini sesuai dengan hasil eksplorasi menggunakan plot time series dan plot ACF.

### Penanganan Data Tidak Stasioner dalam Rataan
```{r}
traindiff<-diff(traints,differences = 1) 
plot.ts(traindiff, lty=1, xlab="Times", ylab="Data Difference 1 ", main="Plot Difference")
```
Terlihat pada plot tersebut data sudah stasioner dalam rataan ditandai dengan data bergerak pada nilai tengah.

## Plot ACF dan PACF Setelah Penanganan
```{r}
acf_trainnew <-acf(traindiff)
pacf_trainnew <- pacf(traindiff)
```
Diperoleh model ARIMA(1,1,0) dan ARIMA(0,1,1)

## Uji ADF
```{r}
tseries::adf.test(traindiff)
```

$H_0$ : Data tidak stasioner dalam rataan
$H_1$ : Data stasioner dalam rataan
Berdasarkan uji ADF tersebut, didapat *p-value* sebesar 0.01 yang lebih kecil dari taraf nyata 5% sehingga tolak $H_0$ atau data stasioner dalam rataan. Sehingga dalam hal ini ketidakstasioneran data sudah berhasil ditangani dan dapat dilanjutkan ke pemodelan

## Plot EACF
```{r}
eacf(traindiff)
```
Identifikasi model menggunakan plot EACF dilakukan dengan melihat ujung segitiga pada pola segitiga nol. Dalam hal ini model tentatif yang terbentuk adalah ARIMA(0,1,1), ARIMA(1,1,1), ARIMA(2,1,0), dan ARIMA(3,1,1).

### ARIMA(1,1,0)
```{r}
model1.da = Arima(traindiff,order=c(1,1,0),method = "ML")
summary(model1.da) 
coeftest(model1.da)
```

### ARIMA(0,1,1)
```{r}
model2.da = Arima(traindiff,order=c(0,1,1),method = "ML")
summary(model2.da) 
coeftest(model2.da)
```
### ARIMA(1,1,1)
```{r}
model3.da = Arima(traindiff,order=c(1,1,1),method = "ML")
summary(model3.da) 
coeftest(model3.da)
```
### ARIMA(2,1,0)
```{r}
model4.da = Arima(traindiff,order=c(2,1,0),method = "ML")
summary(model4.da) 
coeftest(model4.da)
```
### ARIMA(3,1,1)
```{r}
model5.da = Arima(traindiff,order=c(3,1,1),method = "ML")
summary(model5.da) 
coeftest(model5.da)
```

Model terbaik diperoleh pada ARIMA(1,1,1) didapatkan nilai IAC sebesar 189.95 dan seluruh parameter signifikan.

# Eksplorasi model terbaik
```{r}
#Eksplorasi 
sisaan.da <- model3.da$residuals 
par(mfrow=c(2,2)) 
qqnorm(sisaan.da) 
qqline(sisaan.da, col = "blue", lwd = 2) 
plot(c(1:length(sisaan.da)),sisaan.da) 
acf(sisaan.da) 
pacf(sisaan.da) 
par(mfrow = c(1,1))
```

## Uji Formal
```{r}
#1) Sisaan Menyebar Normal 
ks.test(sisaan.da,"pnorm")
```

$H_0$ : Sisaan menyebar normal
$H_1$ : Sisaan tidak menyebar normal
Berdasarkan uji KS tersebut, didapat *p-value* sebesar 0.0114 yang kurang dari taraf nyata 5% sehingga tolak $H_0$ dan menandakan bahwa sisaan tidak menyebar normal. Hal ini sesuai dengan hasil eksplorasi menggunakan plot kuantil-kuantil normal.

```{r}
#2) Sisaan saling bebas/tidak ada autokorelasi 
Box.test(sisaan.da, type = "Ljung")  
```

$H_0$ : Sisaan saling bebas
$H_1$ : Sisaan tidak tidak saling bebas
Berdasarkan uji Ljung-Box tersebut, didapat *p-value* sebesar 0.495 yang lebih besar dari taraf nyata 5% sehingga tak tolak $H_0$ dan menandakan bahwa sisaan saling bebas. Artinya tidak ada autokorelasi

```{r}
#3) Sisaan homogen 
Box.test((sisaan.da)^2, type = "Ljung") 
```

$H_0$ : Ragam sisaan homogen
$H_1$ : Ragam sisaan tidak homogen
Berdasarkan uji Ljung-Box tersebut, didapat *p-value* sebesar 0.6321 yang lebih besar dari taraf nyata 5% sehingga tak tolak $H_0$ dan menandakan bahwa ragam sisaan homogen

```{r}
#4) Nilai tengah sisaan sama dengan nol 
t.test(sisaan.da, mu = 0, conf.level = 0.95)  #tak tolak h0 > nilai tengah sisaan sama dengan 0
```

$H_0$ : nilai tengah sisaan sama dengan 0
$H_1$ : nilai tengah sisaan tidak sama dengan 0
Berdasarkan uji-tersebut, didapat *p-value* sebesar 0.6052 yang lebih besar dari taraf nyata 5% sehingga tak tolak $H_0$ dan menandakan bahwa nilai tengah sisaan sama dengan 0

# Overfitting
## ARIMA(1,1,2)

```{r}
modelov=Arima(traints, order=c(1,1,2),method="ML")
summary(modelov) 
lmtest::coeftest(modelov) 
```
berdasarkan hasil overfitting yg terbaik tetap model ARIMA(1,1,1).

# Peramalan
```{r}
ramal <- forecast::forecast(model3.da, h = 24) 
ramal
dataramal <- ramal$mean
plot(ramal)
```

```{r}
pt.1 <- traints[97] 
hasilforc.Diff <- dataramal
hasil <- diffinv(hasilforc.Diff, differences = 1) + pt.1
ts.plot(traints,hasil)
```

# AKURASI
```{r}
perbandingan <- matrix(data=c(head(testts, n=24), hasil[-1]),
                     nrow = 24, ncol = 2)
colnames(perbandingan) <- c("Aktual","Hasil Forecast")
perbandingan
accuracy(hasil[-1], head(testts, n=24))
```
