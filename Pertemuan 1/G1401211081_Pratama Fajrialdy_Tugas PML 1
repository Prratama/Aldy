```{r}
library(rio)
data1 <- import("https://raw.githubusercontent.com/Prratama/MPDW/main/Data/mpdw1.csv")
```

```{r}
library("forecast")
library("graphics")
library("TTR")
library("TSA")
```

# Membuat data time series
```{r}
data.ts <- ts(tugas$Harga)
data.ts
summary(data.ts)
```

# Membagi data latih dan data uji
```{r}
training_ma <- tugas[1:98,]
testing_ma <- tugas[99:122,]
train_ma.ts <- ts(training_ma$Harga)
test_ma.ts <- ts(testing_ma$Harga)
```

#Eksplorasi Data
```{r}
ts.plot(data.ts, xlab="Time Period ", ylab="Harga Bawang Merah", 
        main = "Time Series Plot")
points(data.ts)

plot(data.ts, col="red",main="Plot semua data")
points(data.ts)

plot(train_ma.ts, col="blue",main="Plot data latih")
points(train_ma.ts)

plot(test_ma.ts, col="blue",main="Plot data uji")
points(test_ma.ts)

```

# Mendefinisikan fungsi untuk pemulusan SMA dengan parameter = 5
```{r}
hasil.sma<-SMA(train_ma.ts, n=5)
hasil.sma
```

# Meramal 1 periode dan 24 periode ke depan
```{r}
ramal<-c(NA,hasil.sma)
ramal #forecast 1 periode ke depan

data.gab<-cbind(aktual=c(train_ma.ts,rep(NA,24)),pemulusan=c(hasil.sma,rep(NA,24)),ramalan=c(ramal,rep(ramal[length(ramal)],23)))
data.gab #forecast 24 periode ke depan
```

# Plot hasil peramalan
```{r}
ts.plot(data.ts, xlab="Time Period ", ylab="Harga ", main= "SMA N=5 Harga Bawang")
points(data.ts)
lines(data.gab[,2],col="green",lwd=2)
lines(data.gab[,3],col="red",lwd=2)
legend("topleft",c("data aktual","data pemulusan","data peramalan"), lty=8, col=c("black","green","red"), cex=0.5)
```

# Nilai keakuratan dat latih
```{r}
error_train.sma = train_ma.ts-ramal[1:length(train_ma.ts)]
SSE_train.sma = sum(error_train.sma[6:length(train_ma.ts)]^2)
MSE_train.sma = mean(error_train.sma[6:length(train_ma.ts)]^2)
MAPE_train.sma = mean(abs((error_train.sma[6:length(train_ma.ts)]/train_ma.ts[6:length(train_ma.ts)])*100))

akurasi_train.sma <- matrix(c(SSE_train.sma, MSE_train.sma, MAPE_train.sma))
row.names(akurasi_train.sma)<- c("SSE", "MSE", "MAPE")
colnames(akurasi_train.sma) <- c("Akurasi m = 5")
akurasi_train.sma
```


# Nilai keakuratan data uji
```{r}
error_test.sma = test_ma.ts-data.gab[99:122,3]
SSE_test.sma = sum(error_test.sma^2)
MSE_test.sma = mean(error_test.sma^2)
MAPE_test.sma = mean(abs((error_test.sma/test_ma.ts*100)))

akurasi_test.sma <- matrix(c(SSE_test.sma, MSE_test.sma, MAPE_test.sma))
row.names(akurasi_test.sma)<- c("SSE", "MSE", "MAPE")
colnames(akurasi_test.sma) <- c("Akurasi m = 5")
akurasi_test.sma
```
